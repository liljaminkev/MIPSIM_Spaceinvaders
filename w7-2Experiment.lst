    1                  		.data   
    2 10010000 3e6f6f3c	al1:	.word	0x3e6f6f3c
    3 10010004 5d20205b		.word	0x5d20205b
    4 10010008 305f5f30		.word	0x305f5f30
    5 1001000c 3e4f4f3c	al12:	.word	0x3e4f4f3c
    6 10010010 5d20205b		.word	0x5d20205b
    7 10010014 20303020		.word	0x20303020
    8 10010018 db2020db	al2:	.word	0xdb2020db
    9 1001001c 20dbdb20		.word	0x20dbdb20
   10 10010020 db2020db		.word	0xdb2020db
   11 10010024 20202020	al22:	.word	0x20202020
   12 10010028 20dbdb20		.word	0x20dbdb20
   13 1001002c 20202020		.word	0x20202020
   14 10010030 20db1edb	ship:	.word	0x20db1edb
   15 10010034 dddddddd	boss:	.word	0xdddddddd
   16 10010038         	buffer:	.space 	25*81       	# A 256 bytes buffer  
   17 10010821 01	bitmap:	.byte 	1:44
   18 1001084d a7	bu:	.byte	0xa7
   19 1001084e 40	bom:	.byte	0x40:1
   20                   #begin keyboard struct
   21 a0000010         	keyboard:	.struct 0xa0000000	#start from hardware base address
   22 a0000000         	flags:		.byte 0
   23 a0000001         	mask:		.byte 0
   24 a0000002         			.half 0
   25 a0000004         	keypress: 	.byte 0,0,0
   26 a0000007         	presscon: 	.byte 0
   27 a0000008         	keydown:	.half 0
   28 a000000a         	shiftdown:	.byte 0
   29 a000000b         	downcon:	.byte 0
   30 a000000c         	keyup:		.half 0
   31 a000000e         	upshift:	.byte 0
   32 a000000f         	upcon:		.byte 0
   33                  			.data
   34                   #end keyboard struct 
   35                   #begin timer struct
   36          00000006	timer.int = 6
   37 a0000070         	timer:	.struct 0xa0000050
   38 a0000050         	flags:	.byte	0
   39 a0000051         	mask:	.byte	0
   40 a0000052         		.half	0
   41 a0000054         	t1:	.word	0
   42 a0000058         	t2:	.word	0
   43 a000005c         	t3:	.word	0
   44 a0000060         	t4:	.word	0
   45 a0000064         	t5:	.word	0
   46 a0000068         	t6:	.word	0
   47 a000006c         	t7:	.word	0
   48                  		.code  
   49                   #end timer struct
   50                   #begin main
   51                   main:  
   52                   #begin timers
   53                   #alien timer
   54                  		la	$a0,timer.t1		# hardware address of timer1
   54 00400000 3c04a000		lui	$a0,0xA000
   54 00400004 34840054		ori	$a0,$a0,0x54
   55 00400008 20050004		addi	$a1,$0,4		# 4 byte data
   56 0040000c 200602bc		addi	$a2,$0,700		# timer interval every five seconds
   57 00400010 0000068c		syscall	$IO_write
   58                   #mothership timer
   59                  		la	$a0,timer.t2		# hardware address of timer1
   59 00400014 3c04a000		lui	$a0,0xA000
   59 00400018 34840058		ori	$a0,$a0,0x58
   60 0040001c 20050004		addi	$a1,$0,4		# 4 byte data
   61 00400020 20060064		addi	$a2,$0,100		# timer interval every five seconds
   62 00400024 0000068c		syscall	$IO_write
   63                  		la	$a0,timer.t5		# hardware address of timer1
   63 00400028 3c04a000		lui	$a0,0xA000
   63 0040002c 34840064		ori	$a0,$a0,0x64
   64 00400030 20050004		addi	$a1,$0,4		# 4 byte data
   65 00400034 20067530		addi	$a2,$0,30000		# timer interval every five seconds
   66 00400038 0000068c		syscall	$IO_write
   67                   #bullet timer
   68                  		la	$a0,timer.t3		# hardware address of timer1
   68 0040003c 3c04a000		lui	$a0,0xA000
   68 00400040 3484005c		ori	$a0,$a0,0x5C
   69 00400044 20050004		addi	$a1,$0,4		# 4 byte data
   70 00400048 200601f4		addi	$a2,$0,500 		# timer interval every five seconds
   71 0040004c 0000068c		syscall	$IO_write
   72                   #bomb timer
   73                  		la	$a0,timer.t4		# hardware address of timer1
   73 00400050 3c04a000		lui	$a0,0xA000
   73 00400054 34840060		ori	$a0,$a0,0x60
   74 00400058 20050004		addi	$a1,$0,4		# 4 byte data
   75 0040005c 200601f4		addi	$a2,$0,500		# timer interval every five seconds
   76 00400060 0000068c		syscall	$IO_write
   77                   #end timers
   78                   #begin variables 
   79 00400064 00009020		add	$s2,$0,$0		#Alien movement tracker
   80                  		li	$s6,25			#number of rows down
   80 00400068 34160019		ori	$s6,$0,0x19
   81                  		li	$s5,40			#ship position
   81 0040006c 34150028		ori	$s5,$0,0x28
   82 00400070 2014ffff		addi	$s4,$0,-1		#bullet pos
   83 00400074 00009820		add	$s3,$0,$0		#mother ship pos
   84                   #end variables
   85 00400078 0c1000e2		jal	render
   86                   #move aliens 25 lines	
   87                  	1:	li	$s7,26			#spaces for aliens to move:
   87 0040007c 3417001a		ori	$s7,$0,0x1A
   88 00400080 32cd0001		andi 	$t5,$s6,1		#odd or even line
   89 00400084 15a00001		bnez	$t5,2f			#
   90 00400088 200dffff		addi	$t5,$0,-1		#start subtracting if odd	
   91                   #reload flags
   92                  	2:	la	$a0,timer.flags		#get flags
   92 0040008c 3c04a000		lui	$a0,0xA000
   92 00400090 34840050		ori	$a0,$a0,0x50
   93 00400094 0000064c		syscall	$IO_read
   94 00400098 0040c021		mov	$t8,$v0
   95                   #move alien				
   96 0040009c 33080002		andi	$t0,$t8,0x02		#move aliens every .7 seconds
   97 004000a0 11000006		beqz	$t0,3f
   98                  		la	$a0,timer.t1		#load timer t1
   98 004000a4 3c04a000		lui	$a0,0xA000
   98 004000a8 34840054		ori	$a0,$a0,0x54
   99 004000ac 0000064c		syscall	$IO_read		#clear flag
  100 004000b0 024d9020		add	$s2,$s2,$t5		#if true incrment by 1 or -1
  101 004000b4 22f7ffff		addi	$s7,$s7,-1		#spaces for aliens --
  102 004000b8 0c1000e2		jal	render			#print screen
  103                   #move mothership	
  104 004000bc 33080004	3:	andi	$t0,$t8,0x04		#move ship every .5 seconds
  105 004000c0 11000010		beqz	$t0,4f			
  106                  		la	$a0,timer.t2		#load timer t2 
  106 004000c4 3c04a000		lui	$a0,0xA000
  106 004000c8 34840058		ori	$a0,$a0,0x58
  107 004000cc 0000064c		syscall	$IO_read		#clear flag
  108                  		li	$t1,25			#if aliens are still on top line branch down
  108 004000d0 34090019		ori	$t1,$0,0x19
  109                  		li	$t2,76			#if ship is at right of screen
  109 004000d4 340a004c		ori	$t2,$0,0x4C
  110 004000d8 1136000a		beq	$t1,$s6,4f		
  111                  		bgt	$s3,$t2,4f		#skip to next timer to restart ship
  111 004000dc 0153082a		slt	$at,$t2,$s3
  111 004000e0 14200008		bne	$at,$0,4f
  112 004000e4 22730001		addi	$s3,$s3,1		#else add 1
  113 004000e8 0c1000e2		jal	render			#render screen
  114 004000ec 33080020	31:	andi	$t0,$t8,0x20		#wait until new ship timer expires to reset 
  115 004000f0 11000004		beqz	$t0,4f			#mother ship
  116                  		la	$a0,timer.t5		#
  116 004000f4 3c04a000		lui	$a0,0xA000
  116 004000f8 34840064		ori	$a0,$a0,0x64
  117 004000fc 0000064c		syscall	$IO_read		#load and clear flags
  118                  		li	$s3,0			#set back to -1
  118 00400100 34130000		ori	$s3,$0,0x00
  119                   #move bullet
  120 00400104 33080008	4:	andi	$t0,$t8,0x08		#every .2 seconds move bullet
  121 00400108 11000010		beqz	$t0,5f
  122                  		la	$a0,timer.t3		#load timer
  122 0040010c 3c04a000		lui	$a0,0xA000
  122 00400110 3484005c		ori	$a0,$a0,0x5C
  123 00400114 0000064c		syscall	$IO_read		#clear timer
  124 00400118 1e800002		bgtz	$s4,41f			#when ready 
  125                  		li	$s4,0
  125 0040011c 34140000		ori	$s4,$0,0x00
  126 00400120 08100053		j	5f
  127                  	41:	la	$t0,buffer
  127 00400124 3c081001		lui	$t0,0x1001
  127 00400128 35080038		ori	$t0,$t0,0x38
  128 0040012c 01144020		add	$t0,$t0,$s4
  129 00400130 2108ffaf		addi	$t0,$t0,-81
  130 00400134 81090000		lb	$t1,($t0)
  131 00400138 35290020		ori	$t1,$t1,0x20
  132 0040013c 15200002		bnez	$t1,42f
  133 00400140 0c1000e1		jal	killAlien
  134 00400144 08100053		j	5f
  135                   	
  136 00400148 2294ffaf	42:	addi	$s4,$s4,-81		#decrment bullet
  137                   #move bomb
  138 0040014c 33080010	5:	andi	$t0,$t8,0x10
  139 00400150 11000004		beqz	$t0,6f
  140                  		la	$a0,timer.t4
  140 00400154 3c04a000		lui	$a0,0xA000
  140 00400158 34840060		ori	$a0,$a0,0x60
  141 0040015c 0000064c		syscall	$IO_read
  142 00400160 0c1000a7		jal 	bomb
  143                   #move ship/fire
  144                  	6:	la	$a0,keyboard.flags	# hardware address of keyboard flags
  144 00400164 3c04a000		lui	$a0,0xA000
  144 00400168 34840000		ori	$a0,$a0,0x00
  145 0040016c 20050001		addi	$a1,$0,1		# 1 byte of data
  146 00400170 0000064c		syscall 	$IO_read		# read flags
  147 00400174 30480002		andi	$t0,$v0,0b10		
  148 00400178 11000005		beqz	$t0,7f			
  149 0040017c 20840008		addi	$a0,$a0,8		
  150 00400180 20050002		addi	$a1,$0,2		# 2 bytes of data
  151 00400184 0000064c		syscall	$IO_read
  152 00400188 00402021		mov	$a0,$v0
  153 0040018c 0c100069		jal	input
  154 00400190 1ee0ffbe	7:	bgtz	$s7,2b			#branch to 2 while aliens are traversing line
  155 00400194 22d6ffff		addi	$s6,$s6,-1		#once line traversed linecounter--
  156 00400198 22520051		addi	$s2,$s2,81		#add 81 chars for movement offset
  157 0040019c 1ec0ffb7		bgtz	$s6,1b			#branch back to 1
  158 004001a0 0000028c		syscall	$exit
  159                   #end main
  160                   #begin ship
  161                   #moveship/makebullet
  162 004001a4 23bdfffc	input:	addi	$sp,$sp,-4
  163 004001a8 afbf0000		sw	$ra,0($sp)
  164 004001ac 20080025		addi	$t0,$0,37		#detect left arrow
  165 004001b0 14880004		bne	$a0,$t0,1f		
  166 004001b4 20080001		addi	$t0,$0,1
  167 004001b8 1115000d		beq	$t0,$s5,4f
  168 004001bc 22b5ffff		addi	$s5,$s5,-1		#sub 1 if detected
  169 004001c0 0810007b		j	3f
  170 004001c4 20080027	1:	addi	$t0,$0,39		#dectect right arrow
  171 004001c8 14880004		bne	$a0,$t0,2f
  172 004001cc 2008004c		addi	$t0,$0,76
  173 004001d0 11150007		beq	$t0,$s5,4f
  174 004001d4 22b50001		addi	$s5,$s5,1		#add 1 if detected 
  175 004001d8 0810007b		j	3f
  176 004001dc 20080020	2:	addi	$t0,$0,32		#detect space
  177 004001e0 14880003		bne	$a0,$t0,4f
  178 004001e4 1e800002		bgtz	$s4,4f
  179 004001e8 22b40748		addi	$s4,$s5,1864			#start bullet counter if detected
  180 004001ec 0c1000e2	3:	jal	render
  181 004001f0 8fbf0000	4:	lw	$ra,0($sp)
  182 004001f4 23bdfffc		addi	$sp,$sp,-4
  183 004001f8 03e00008		jr	$ra
  184                   placeShip:
  185 004001fc 23bdffec		addi	$sp,$sp,-20
  186 00400200 afab0010		sw	$t3,16($sp)
  187 00400204 afa8000c		sw	$t0,12($sp)
  188 00400208 afa90008		sw	$t1,8($sp)
  189 0040020c afaa0004		sw	$t2,4($sp)
  190 00400210 afbf0000		sw	$ra,0($sp)
  191                  		la 	$t0,ship		#get add of ship
  191 00400214 3c081001		lui	$t0,0x1001
  191 00400218 35080030		ori	$t0,$t0,0x30
  192 0040021c 8d090000		lw	$t1,($t0)		#load ship
  193                  		la	$t2,buffer		#get buffer
  193 00400220 3c0a1001		lui	$t2,0x1001
  193 00400224 354a0038		ori	$t2,$t2,0x38
  194 00400228 22ab0798		addi	$t3,$s5,1944		#find pos via t3
  195 0040022c 014b5020		add	$t2,$t2,$t3		#increment buffer to correct pos 
  196                  		usw	$t1,($t2)		#add ship to buffer at pos
  196 00400230 a9490003		swl	$t1,+3($t2)
  196 00400234 b9490000		swr	$t1,($t2)
  197 00400238 8fbf0000		lw	$ra,0($sp)
  198 0040023c 8faa0004		lw	$t2,4($sp)
  199 00400240 8fa90008		lw	$t1,8($sp)
  200 00400244 8fa8000c		lw	$t0,12($sp)
  201 00400248 8fab0010		lw	$t3,16($sp)	
  202 0040024c 23bd0014		addi	$sp,$sp,20
  203 00400250 03e00008		jr	$ra
  204                   #end
  205                   
  206                   #begin bullet
  207                   placeBullet:
  208 00400254 23bdfff0		addi	$sp,$sp,-16
  209 00400258 afa8000c		sw	$t0,12($sp)
  210 0040025c afa90008		sw	$t1,8($sp)
  211 00400260 afaa0004		sw	$t2,4($sp)
  212 00400264 afbf0000		sw	$ra,0($sp)
  213                  		la 	$t0,bu			#load bullet
  213 00400268 3c081001		lui	$t0,0x1001
  213 0040026c 3508084d		ori	$t0,$t0,0x84D
  214 00400270 81090000		lb	$t1,($t0)		
  215                  		la	$t2,buffer		#load buffer
  215 00400274 3c0a1001		lui	$t2,0x1001
  215 00400278 354a0038		ori	$t2,$t2,0x38
  216 0040027c 01545020		add	$t2,$t2,$s4		#increment buffer to bullet location 
  217 00400280 a1490000		sb	$t1,($t2)		#place bullet
  218 00400284 8fbf0000		lw	$ra,0($sp)
  219 00400288 8faa0004		lw	$t2,4($sp)
  220 0040028c 8fa90008		lw	$t1,8($sp)
  221 00400290 8fa8000c		lw	$t0,12($sp)
  222 00400294 23bd0010		addi	$sp,$sp,16
  223 00400298 03e00008		jr	$ra
  224                   #end
  225                   
  226                   #begin bomb
  227 0040029c 23bdfff0	bomb:	addi	$sp,$sp,-16
  228 004002a0 afa8000c		sw	$t0,12($sp)
  229 004002a4 afa90008		sw	$t1,8($sp)
  230 004002a8 afaa0004		sw	$t2,4($sp)
  231 004002ac afbf0000		sw	$ra,0($sp)
  232                  		li	$t0,2025
  232 004002b0 340807e9		ori	$t0,$0,0x7E9
  233                  		blt	$s1,$t0,1f
  233 004002b4 0228082a		slt	$at,$s1,$t0
  233 004002b8 14200002		bne	$at,$0,1f
  234                  		li	$s1,0
  234 004002bc 34110000		ori	$s1,$0,0x00
  235 004002c0 0c1000b6		jal	3f	
  236 004002c4 1e200003	1:	bgtz	$s1,2f 
  237 004002c8 225104bf		addi	$s1,$s2,1215
  238 004002cc 02358820		add	$s1,$s1,$s5
  239 004002d0 081000b6		j	3f
  240 004002d4 22310051	2:	addi	$s1,$s1,81
  241 004002d8 8fbf0000	3:	lw	$ra,0($sp)
  242 004002dc 8faa0004		lw	$t2,4($sp)
  243 004002e0 8fa90008		lw	$t1,8($sp)
  244 004002e4 8fa8000c		lw	$t0,12($sp)
  245 004002e8 23bd0010		addi	$sp,$sp,16
  246 004002ec 03e00008		jr	$ra
  247                   placeBomb:
  248 004002f0 23bdfff0		addi	$sp,$sp,-16
  249 004002f4 afa8000c		sw	$t0,12($sp)
  250 004002f8 afa90008		sw	$t1,8($sp)
  251 004002fc afaa0004		sw	$t2,4($sp)
  252 00400300 afbf0000		sw	$ra,0($sp)
  253                  		la	$t0,bom
  253 00400304 3c081001		lui	$t0,0x1001
  253 00400308 3508084e		ori	$t0,$t0,0x84E
  254                  		la	$t2,buffer
  254 0040030c 3c0a1001		lui	$t2,0x1001
  254 00400310 354a0038		ori	$t2,$t2,0x38
  255 00400314 81090000		lb	$t1,($t0)
  256 00400318 01515020		add	$t2,$t2,$s1
  257 0040031c a1490000		sb	$t1,($t2)
  258                   
  259 00400320 8fbf0000		lw	$ra,0($sp)
  260 00400324 8faa0004		lw	$t2,4($sp)
  261 00400328 8fa90008		lw	$t1,8($sp)
  262 0040032c 8fa8000c		lw	$t0,12($sp)
  263 00400330 23bd0010		addi	$sp,$sp,16
  264 00400334 03e00008	2:	jr	$ra
  265                   #end bomb
  266                   #begin mShip
  267 00400338 23bdfff0	mShip: 	addi	$sp,$sp,-16
  268 0040033c afa8000c		sw	$t0,12($sp)
  269 00400340 afa90008		sw	$t1,8($sp)
  270 00400344 afaa0004		sw	$t2,4($sp)
  271 00400348 afbf0000		sw	$ra,0($sp)
  272                  		la 	$t0,boss		#load mother ship
  272 0040034c 3c081001		lui	$t0,0x1001
  272 00400350 35080034		ori	$t0,$t0,0x34
  273 00400354 8d090000		lw	$t1,($t0)			
  274                  		la	$t2,buffer		#load buffer
  274 00400358 3c0a1001		lui	$t2,0x1001
  274 0040035c 354a0038		ori	$t2,$t2,0x38
  275 00400360 01535020		add	$t2,$t2,$s3		#increment buffer to mother ship location
  276                  		usw	$t1,($t2)		#place mothership at location
  276 00400364 a9490003		swl	$t1,+3($t2)
  276 00400368 b9490000		swr	$t1,($t2)
  277 0040036c 8fbf0000		lw	$ra,0($sp)
  278 00400370 8faa0004		lw	$t2,4($sp)
  279 00400374 8fa90008		lw	$t1,8($sp)
  280 00400378 8fa8000c		lw	$t0,12($sp)
  281 0040037c 23bd0010		addi	$sp,$sp,16
  282 00400380 03e00008		jr	$ra
  283                   #end
  284                   
  285                   #begin barriers
  286                   
  287                   #end barriers
  288                   
  289                   #begin killAlien
  290                   killAlien:
  291                   
  292 00400384 03e00008		jr	$ra
  293                   
  294                   
  295                   #end killAlien
  296                   		
  297 00400388 23bdfff4	render:	addi	$sp,$sp,-12
  298 0040038c afa80008		sw	$t0,8($sp)
  299 00400390 afbf0004		sw	$ra,4($sp)
  300 00400394 afa40000		sw	$a0,($sp)
  301 00400398 0c10013f		jal	clearBuffer
  302                  		li	$t0,77		#if s3 is greater than 77 
  302 0040039c 3408004d		ori	$t0,$0,0x4D
  303                  		bgt	$s3,$t0,1f	#	skip to next
  303 004003a0 0113082a		slt	$at,$t0,$s3
  303 004003a4 14200002		bne	$at,$0,1f
  304 004003a8 12600001		beqz	$s3,1f		#if less than zero skip to place bullet
  305 004003ac 0c1000ce		jal	mShip		#else place ship
  306 004003b0 0c1000ff	1:	jal	movAi		#place aleins
  307 004003b4 1aa00001		blez	$s5,2f		#if less than zero dont place bullet
  308 004003b8 0c100095		jal	placeBullet	#else place bullet 
  309 004003bc 0c10007f	2:	jal	placeShip	#place ship
  310                  		li	$t0,2025
  310 004003c0 340807e9		ori	$t0,$0,0x7E9
  311                  		bgt 	$s1,$t0,3f
  311 004003c4 0111082a		slt	$at,$t0,$s1
  311 004003c8 14200001		bne	$at,$0,3f
  312 004003cc 0c1000bc		jal 	placeBomb
  313                  	3:	li	$a0,0		
  313 004003d0 34040000		ori	$a0,$0,0x00
  314                  		li	$a1,0
  314 004003d4 34050000		ori	$a1,$0,0x00
  315 004003d8 0000050c		syscall	$xy		#mover curser to a0,a1
  316                  		la	$a0,buffer	#get a0 ready for printing
  316 004003dc 3c041001		lui	$a0,0x1001
  316 004003e0 34840038		ori	$a0,$a0,0x38
  317 004003e4 0000010c		syscall	$print_string	#cout a0
  318 004003e8 8fa40000		lw	$a0,($sp)
  319 004003ec 8fbf0004		lw	$ra,4($sp)
  320 004003f0 8fa80008		lw	$t0,8($sp)
  321 004003f4 23bd000c		addi	$sp,$sp,12
  322 004003f8 03e00008		jr	$ra
  323                   #begin Move Alien	
  324                   #takes s2:alien tracker
  325                   #local	t9:even/odd
  326 004003fc 23bdfffc	movAi:	addi	$sp,$sp,-4		
  327 00400400 afbf0000		sw	$ra,0($sp)		
  328                  	1:	la	$a0,buffer		#load buffer
  328 00400404 3c041001		lui	$a0,0x1001
  328 00400408 34840038		ori	$a0,$a0,0x38
  329 0040040c 00922020		add	$a0,$a0,$s2		#incrment buffer by s2
  330 00400410 32590001		andi	$t9,$s2,1		#find out if on an odd space
  331 00400414 0c100109		jal	renai			#renai screen
  332 00400418 8fbf0000		lw	$ra,0($sp)	
  333 0040041c 23bd0004		addi	$sp,$sp,4
  334 00400420 03e00008		jr	$ra
  335                   #end
  336                   #begin render aliens
  337                   	#renai screen
  338                   	#takes buffer pointer:a0, alien:t6
  339                   	#local t0:numRows t1:twofows for diffrent alien
  340 00400424 23bdfffc	renai:	addi	$sp,$sp,-4
  341 00400428 afbf0000		sw	$ra,0($sp)
  342                  		li	$t0,4		#row counter
  342 0040042c 34080004		ori	$t0,$0,0x04
  343                  		li	$t1,2		#counter for first 2 rows of aliens 
  343 00400430 34090002		ori	$t1,$0,0x02
  344                  		la	$t2,bitmap	#do
  344 00400434 3c0a1001		lui	$t2,0x1001
  344 00400438 354a0821		ori	$t2,$t2,0x821
  345                  	row:	la	$t6,al1		#{alien 1 to t6
  345 0040043c 3c0e1001		lui	$t6,0x1001
  345 00400440 35ce0000		ori	$t6,$t6,0x00
  346 00400444 17200002		bnez	$t9,col		#if even go to col
  347                  		la	$t6,al12	#if odd change alien 1-2
  347 00400448 3c0e1001		lui	$t6,0x1001
  347 0040044c 35ce000c		ori	$t6,$t6,0x0C
  348                  	col:	li	$t3,11			#start dowhile counter
  348 00400450 340b000b		ori	$t3,$0,0x0B
  349 00400454 814c0000	1:	lb	$t4,($t2)		#load dead/alive status
  350 00400458 05800009		bltz	$t4,2f
  351                   #	jal 	placeAlien		#{place alien
  352 0040045c 8dcf0000		lw 	$t7,0($t6)               # get character at address  
  353                  		usw 	$t7,0($a0)               # else store current character in the buffer  
  353 00400460 a88f0003		swl	$t7,0+3($a0)
  353 00400464 b88f0000		swr	$t7,0($a0)
  354 00400468 8dcf0004		lw	$t7,4($t6)
  355                  		usw 	$t7,81($a0)               # else store current character in the buffer 
  355 0040046c a88f0054		swl	$t7,81+3($a0)
  355 00400470 b88f0051		swr	$t7,81($a0)
  356 00400474 8dcf0008		lw	$t7,8($t6)
  357                  		usw 	$t7,162($a0)               # else store current character in the buffer
  357 00400478 a88f00a5		swl	$t7,162+3($a0)
  357 0040047c b88f00a2		swr	$t7,162($a0)
  358 00400480 20840005	2:	addi	$a0,$a0,5		#incrment pointer:a0
  359 00400484 216bffff		addi	$t3,$t3,-1		#decremnt col counter:t3
  360 00400488 214a0001		addi	$t2,$t2,1		#bitmap
  361 0040048c 1d60fff1		bgtz	$t3,1b			#}while(t3<11)
  362 00400490 2084010d		addi	$a0,$a0,269	#move pointer back to left side of screen
  363 00400494 2108ffff		addi	$t0,$t0,-1	#rowcounter--
  364 00400498 2129ffff		addi	$t1,$t1,-1	#firstrows--
  365 0040049c 1d200005		bgtz	$t1,3f		#if first two rows have been printed
  366                  		la	$t6,al2			#load second alien
  366 004004a0 3c0e1001		lui	$t6,0x1001
  366 004004a4 35ce0018		ori	$t6,$t6,0x18
  367 004004a8 17200002		bnez	$t9,3f			#if odd load alien2-2
  368                  		la	$t6,al22		#alien2-2 to t6
  368 004004ac 3c0e1001		lui	$t6,0x1001
  368 004004b0 35ce0024		ori	$t6,$t6,0x24
  369 004004b4 1d00ffe6	3:	bgtz	$t0,col		#}while(t0<4)
  370 004004b8 8fbf0000		lw	$ra,0($sp)	#restore ra 
  371 004004bc 23bd0004		addi	$sp,$sp,4	#resotre stack pointer
  372 004004c0 03e00008		jr	$ra		
  373                   #end
  374                   #begin Place alien
  375                   ############################
  376                   #Place alien 
  377                   #takes a0:buffer
  378                   placeAlien:  
  379 004004c4 23bdfffc		addi	$sp,$sp,-4
  380 004004c8 afbf0000		sw	$ra,0($sp)
  381 004004cc 8dcf0000		lw 	$t7,0($t6)               # get character at address  
  382                  		usw 	$t7,0($a0)               # else store current character in the buffer  
  382 004004d0 a88f0003		swl	$t7,0+3($a0)
  382 004004d4 b88f0000		swr	$t7,0($a0)
  383 004004d8 8dcf0004		lw	$t7,4($t6)
  384                  		usw 	$t7,81($a0)               # else store current character in the buffer 
  384 004004dc a88f0054		swl	$t7,81+3($a0)
  384 004004e0 b88f0051		swr	$t7,81($a0)
  385 004004e4 8dcf0008		lw	$t7,8($t6)
  386                  		usw 	$t7,162($a0)               # else store current character in the buffer
  386 004004e8 a88f00a5		swl	$t7,162+3($a0)
  386 004004ec b88f00a2		swr	$t7,162($a0)
  387 004004f0 8fbf0000		lw	$ra,0($sp)	
  388 004004f4 23bd0004		addi	$sp,$sp,4
  389 004004f8 03e00008		jr	$ra
  390                   
  391                   #end
  392                   #begin clear screen	
  393                   ############################
  394                   #clear screen
  395                   #clear the buffer with spaces and newlines
  396                   clearBuffer:
  397                  		la	$t0,buffer		#t0:bufferpointer
  397 004004fc 3c081001		lui	$t0,0x1001
  397 00400500 35080038		ori	$t0,$t0,0x38
  398 00400504 200a0019		addi	$t2,$0,25		#t2:counter
  399                  		li	$t3,0x20202020		#t3:space
  399 00400508 3c0b2020		lui	$t3,0x2020
  399 0040050c 356b2020		ori	$t3,$t3,0x2020
  400 00400510 200c000a		addi	$t4,$0,'\n		#t4:new line
  401 00400514 20090004	1:	addi	$t1,$0,4		#charCounter = 80
  402                  	2:	usw	$t3,($t0)		#store space in char 
  402 00400518 a90b0003		swl	$t3,+3($t0)
  402 0040051c b90b0000		swr	$t3,($t0)
  403                  		usw	$t3,4($t0)
  403 00400520 a90b0007		swl	$t3,4+3($t0)
  403 00400524 b90b0004		swr	$t3,4($t0)
  404                  		usw	$t3,8($t0)
  404 00400528 a90b000b		swl	$t3,8+3($t0)
  404 0040052c b90b0008		swr	$t3,8($t0)
  405                  		usw	$t3,12($t0)
  405 00400530 a90b000f		swl	$t3,12+3($t0)
  405 00400534 b90b000c		swr	$t3,12($t0)
  406                  		usw	$t3,16($t0)
  406 00400538 a90b0013		swl	$t3,16+3($t0)
  406 0040053c b90b0010		swr	$t3,16($t0)
  407 00400540 21080014		addi	$t0,$t0,20		#incremnt buffer pointer
  408 00400544 2129ffff		addi	$t1,$t1,-1		#charCounter--
  409 00400548 1d20fff3		bgtz	$t1,2b			#fill char while less than 80 chars
  410 0040054c a10c0000		sb	$t4,($t0)
  411 00400550 21080001		addi	$t0,$t0,1
  412 00400554 214affff		addi	$t2,$t2,-1		#counter--
  413 00400558 1d40ffee		bgtz	$t2,1b			#branch back to 1 while less then 25 lines
  414 0040055c a100ffff		sb	$0,-1($t0)
  415 00400560 03e00008		jr 	$ra
  416                   #end
  417                   
                 	