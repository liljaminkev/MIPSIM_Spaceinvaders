    1                  		.data   
    2 10010000 3e6f6f3c	al1:	.word	0x3e6f6f3c
    3 10010004 5d20205b		.word	0x5d20205b
    4 10010008 305f5f30		.word	0x305f5f30
    5 1001000c 3e4f4f3c	al12:	.word	0x3e4f4f3c
    6 10010010 5d20205b		.word	0x5d20205b
    7 10010014 20303020		.word	0x20303020
    8 10010018 db2020db	al2:	.word	0xdb2020db
    9 1001001c 20dbdb20		.word	0x20dbdb20
   10 10010020 db2020db		.word	0xdb2020db
   11 10010024 20202020	al22:	.word	0x20202020
   12 10010028 20dbdb20		.word	0x20dbdb20
   13 1001002c 20202020		.word	0x20202020
   14 10010030 20db1edb	ship:	.word	0x20db1edb
   15 10010034         	buffer:	.space 	25*81       	# A 256 bytes buffer  
   16 1001081d         	bitmap:	.space 	1:11*5
   17          00000006	timer.int = 6
   18 a0000070         	timer:	.struct 0xa0000050
   19 a0000050         	flags:	.byte	0
   20 a0000051         	mask:	.byte	0
   21 a0000052         		.half	0
   22 a0000054         	t1:	.word	0
   23 a0000058         	t2:	.word	0
   24 a000005c         	t3:	.word	0
   25 a0000060         	t4:	.word	0
   26 a0000064         	t5:	.word	0
   27 a0000068         	t6:	.word	0
   28 a000006c         	t7:	.word	0
   29                  		.code  
   30                   main:  
   31                  		la	$a0,timer.t1		# hardware address of timer1
   31 00400000 3c04a000		lui	$a0,0xA000
   31 00400004 34840054		ori	$a0,$a0,0x54
   32 00400008 20050004		addi	$a1,$0,4		# 4 byte data
   33 0040000c 200603e8		addi	$a2,$0,1000		# timer interval every five seconds
   34 00400010 0000068c		syscall	$IO_write
   35                   	
   36                  		la	$s2,0			#movement tracker
   36 00400014 3c120000		lui	$s2,0x00
   36 00400018 36520000		ori	$s2,$s2,0x00
   37                  		li	$s6,25
   37 0040001c 34160019		ori	$s6,$0,0x19
   38                   	
   39                  	1:	li	$s7,26			#count down:
   39 00400020 3417001a		ori	$s7,$0,0x1A
   40 00400024 32d30001		andi 	$s3,$s6,1
   41 00400028 16600001		bnez	$s3,2f
   42 0040002c 2013ffff		addi	$s3,$0,-1
   43 00400030 0c100028	2:	jal 	movAi
   44 00400034 02539020		add	$s2,$s2,$s3
   45                   
   46                  		la	$a0,timer.flags
   46 00400038 3c04a000		lui	$a0,0xA000
   46 0040003c 34840050		ori	$a0,$a0,0x50
   47 00400040 20050001		addi	$a1,$0,1
   48 00400044 0000064c	3:	syscall	$IO_read
   49 00400048 30480002		andi	$t0,$v0,2
   50 0040004c 1100fffd		beqz	$t0,3b
   51 00400050 20840004		addi	$a0,$a0,4
   52 00400054 0000064c		syscall	$IO_read
   53                   
   54 00400058 22f7ffff		addi	$s7,$s7,-1
   55 0040005c 0c100020		jal	placeShip
   56                  		la	$a0,buffer	#get a0 ready for printing
   56 00400060 3c041001		lui	$a0,0x1001
   56 00400064 34840034		ori	$a0,$a0,0x34
   57 00400068 0000010c		syscall	$print_string	#cout a0
   58                   	
   59                   	
   60 0040006c 1ee0fff0		bgtz	$s7,2b
   61 00400070 22520051		addi	$s2,$s2,81
   62 00400074 22d6ffff		addi	$s6,$s6,-1
   63 00400078 1ec0ffe9		bgtz	$s6,1b
   64 0040007c 0000028c		syscall	$exit
   65                   
   66                   	
   67                   
   68                   #begin Ship
   69                   placeShip:
   70                  		la	$s1,buffer
   70 00400080 3c111001		lui	$s1,0x1001
   70 00400084 36310034		ori	$s1,$s1,0x34
   71                  		la 	$t0,ship
   71 00400088 3c081001		lui	$t0,0x1001
   71 0040008c 35080030		ori	$t0,$t0,0x30
   72 00400090 8d090000		lw	$t1,($t0)
   73                  		usw	$t1,1920($s1)
   73 00400094 aa290783		swl	$t1,1920+3($s1)
   73 00400098 ba290780		swr	$t1,1920($s1)
   74 0040009c 03e00008		jr	$ra
   75                   
   76                   #end
   77                   	
   78                   movAi:
   79 004000a0 23bdfffc		addi	$sp,$sp,-4		
   80 004000a4 afbf0000		sw	$ra,0($sp)		
   81                  	1:	la	$s1,buffer		#load buffer
   81 004000a8 3c111001		lui	$s1,0x1001
   81 004000ac 36310034		ori	$s1,$s1,0x34
   82 004000b0 02328820		add	$s1,$s1,$s2		#incrment buffer by s2
   83 004000b4 32540001		andi	$s4,$s2,1		#find out if on an odd space
   84 004000b8 0c100032		jal	renai			#renai screen
   85                   
   86 004000bc 8fbf0000		lw	$ra,0($sp)	
   87 004000c0 23bd0004		addi	$sp,$sp,4
   88 004000c4 03e00008		jr	$ra
   89                   	
   90                   
   91                   	
   92                   
   93                   	
   94                   
   95                   ############################
   96                   #renai screen
   97                   #takes buffer pointer:s1, alien:t6
   98                   #local t0:numRows t1:twofows for diffrent alien
   99                   renai:
  100 004000c8 23bdfff8		addi	$sp,$sp,-8
  101 004000cc afbf0004		sw	$ra,4($sp)
  102 004000d0 afb20000		sw	$s2,0($sp)
  103 004000d4 0c100063		jal	clearBuffer
  104                   
  105                  		li	$t0,4		#row counter
  105 004000d8 34080004		ori	$t0,$0,0x04
  106                  		li	$t1,2		#counter for first 2 rows of aliens 
  106 004000dc 34090002		ori	$t1,$0,0x02
  107                  		li	$t2,bitmap	#do
  107 004000e0 3c0a1001		lui	$t2,0x1001
  107 004000e4 354a081d		ori	$t2,$t2,0x81D
  108                  	row:	la	$t6,al1		#{alien 1 to t6
  108 004000e8 3c0e1001		lui	$t6,0x1001
  108 004000ec 35ce0000		ori	$t6,$t6,0x00
  109 004000f0 16800002		bnez	$s4,col		#if even go to col
  110                  		la	$t6,al12	#if odd change alien 1-2
  110 004000f4 3c0e1001		lui	$t6,0x1001
  110 004000f8 35ce000c		ori	$t6,$t6,0x0C
  111                  	col:	li	$t3,11			#start dowhile counter
  111 004000fc 340b000b		ori	$t3,$0,0x0B
  112                   1:					#do
  113 00400100 814c0000		lb	$t4,0($t2)		#load dead/alive status
  114 00400104 1d800001		bgtz	$t4,2f
  115 00400108 0c100055		jal 	printAlien		#{place alien
  116 0040010c 22310005	2:	addi	$s1,$s1,5		#incrment pointer:s1
  117 00400110 216bffff		addi	$t3,$t3,-1		#decremnt col counter:t3
  118 00400114 214a0001		addi	$t2,$t2,1		#bitmap
  119 00400118 1d60fff9		bgtz	$t3,1b			#}while(t3<11)
  120 0040011c 2231010d		addi	$s1,$s1,269	#move pointer back to left side of screen
  121                   
  122 00400120 2108ffff		addi	$t0,$t0,-1	#rowcounter--
  123 00400124 2129ffff		addi	$t1,$t1,-1	#firstrows--
  124 00400128 1d200005		bgtz	$t1,3f		#if first two rows have been printed
  125                  		la	$t6,al2			#load second alien
  125 0040012c 3c0e1001		lui	$t6,0x1001
  125 00400130 35ce0018		ori	$t6,$t6,0x18
  126 00400134 16800002		bnez	$s4,3f			#if odd load alien2-2
  127                  		la	$t6,al22		#alien2-2 to t6
  127 00400138 3c0e1001		lui	$t6,0x1001
  127 0040013c 35ce0024		ori	$t6,$t6,0x24
  128 00400140 1d00ffee	3:	bgtz	$t0,col		#}while(t0<4)
  129 00400144 8fb20000		lw	$s2,0($sp)	#take info off stack
  130 00400148 8fbf0004		lw	$ra,4($sp)	#restore ra 
  131 0040014c 23bd0008		addi	$sp,$sp,8	#resotre stack pointer
  132 00400150 03e00008		jr	$ra		
  133                   
  134                   #begin Place alien
  135                   ############################
  136                   #Place alien 
  137                   #takes s1:buffer
  138                   printAlien:  
  139 00400154 23bdfffc		addi	$sp,$sp,-4
  140 00400158 afbf0000		sw	$ra,0($sp)
  141 0040015c 8dcf0000		lw 	$t7,0($t6)               # get character at address  
  142                  		usw 	$t7,0($s1)               # else store current character in the buffer  
  142 00400160 aa2f0003		swl	$t7,0+3($s1)
  142 00400164 ba2f0000		swr	$t7,0($s1)
  143 00400168 8dcf0004		lw	$t7,4($t6)
  144                  		usw 	$t7,81($s1)               # else store current character in the buffer 
  144 0040016c aa2f0054		swl	$t7,81+3($s1)
  144 00400170 ba2f0051		swr	$t7,81($s1)
  145 00400174 8dcf0008		lw	$t7,8($t6)
  146                  		usw 	$t7,162($s1)               # else store current character in the buffer
  146 00400178 aa2f00a5		swl	$t7,162+3($s1)
  146 0040017c ba2f00a2		swr	$t7,162($s1)
  147 00400180 8fbf0000		lw	$ra,0($sp)	
  148 00400184 23bd0004		addi	$sp,$sp,4
  149 00400188 03e00008		jr	$ra
  150                   
  151                   #end
  152                   #begin	clear screen	
  153                   ############################
  154                   #clear screen
  155                   #clear the buffer with spaces and newlines
  156                   clearBuffer:
  157                  		la	$t0,buffer		#t0:bufferpointer
  157 0040018c 3c081001		lui	$t0,0x1001
  157 00400190 35080034		ori	$t0,$t0,0x34
  158 00400194 200a0018		addi	$t2,$0,24		#t2:counter
  159                  		li	$t3,0x20202020		#t3:space
  159 00400198 3c0b2020		lui	$t3,0x2020
  159 0040019c 356b2020		ori	$t3,$t3,0x2020
  160 004001a0 200c000a		addi	$t4,$0,'\n		#t4:new line
  161                   1:
  162 004001a4 20090004		addi	$t1,$0,4		#charCounter = 80
  163                   2:	
  164                  		usw	$t3,($t0)		#store space in char 
  164 004001a8 a90b0003		swl	$t3,+3($t0)
  164 004001ac b90b0000		swr	$t3,($t0)
  165                  		usw	$t3,4($t0)
  165 004001b0 a90b0007		swl	$t3,4+3($t0)
  165 004001b4 b90b0004		swr	$t3,4($t0)
  166                  		usw	$t3,8($t0)
  166 004001b8 a90b000b		swl	$t3,8+3($t0)
  166 004001bc b90b0008		swr	$t3,8($t0)
  167                  		usw	$t3,12($t0)
  167 004001c0 a90b000f		swl	$t3,12+3($t0)
  167 004001c4 b90b000c		swr	$t3,12($t0)
  168                  		usw	$t3,16($t0)
  168 004001c8 a90b0013		swl	$t3,16+3($t0)
  168 004001cc b90b0010		swr	$t3,16($t0)
  169 004001d0 21080014		addi	$t0,$t0,20		#incremnt buffer pointer
  170 004001d4 2129ffff		addi	$t1,$t1,-1		#charCounter--
  171 004001d8 1d20fff3		bgtz	$t1,2b			#fill char while less than 80 chars
  172                   	
  173 004001dc a10c0000		sb	$t4,($t0)
  174 004001e0 21080001		addi	$t0,$t0,1
  175 004001e4 214affff		addi	$t2,$t2,-1		#counter--
  176 004001e8 1d40ffee		bgtz	$t2,1b			#branch back to 1 while less then 25 lines
  177 004001ec 03e00008		jr 	$ra
  178                   #end
  179                   #begin timer
  180                   ############################
  181                   #wait:
  182                   #takes no input t0:counter
  183                   wait:
  184                  		li	$t0,4299990000
  184 004001f0 3c08004c		lui	$t0,0x4C
  184 004001f4 3508a3f0		ori	$t0,$t0,0xA3F0
  185 004001f8 2108ffff	1:	addi	$t0,$t0,-1
  186 004001fc 1d00fffe		bgtz	$t0,1b
  187 00400200 03e00008		jr	$ra
  188                   #end timer
                 	